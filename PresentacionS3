<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tipos de variables y estadística descriptiva I</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
        }
        .slides-container {
            width: 100%;
            height: 100vh;
            overflow: hidden;
            position: relative;
        }
        .slide {
            width: 100%;
            height: 100vh;
            position: absolute;
            top: 0;
            left: 0;
            opacity: 0;
            transition: opacity 0.5s ease;
            padding: 40px;
            display: flex;
            flex-direction: column;
        }
        .slide.active {
            opacity: 1;
            z-index: 5;
        }
        .slide-content {
            max-width: 1000px;
            margin: 0 auto;
            flex: 1;
            display: flex;
            flex-direction: column;
        }
        .slide-header {
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: white;
            padding: 20px;
            border-radius: 10px 10px 0 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .slide-body {
            background: white;
            padding: 30px;
            border-radius: 0 0 10px 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            flex: 1;
            overflow-y: auto;
        }
        h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        h2 {
            font-size: 2rem;
            margin-bottom: 20px;
            color: #6a11cb;
        }
        h3 {
            font-size: 1.5rem;
            margin: 20px 0 10px 0;
            color: #2575fc;
        }
        p {
            margin-bottom: 15px;
            font-size: 1.1rem;
        }
        ul, ol {
            margin-bottom: 15px;
            margin-left: 20px;
        }
        li {
            margin-bottom: 10px;
            font-size: 1.1rem;
        }
        .code {
            background-color: #f5f5f5;
            padding: 15px;
            border-radius: 5px;
            font-family: 'Courier New', Courier, monospace;
            margin: 15px 0;
            font-size: 0.9rem;
            white-space: pre;
            overflow-x: auto;
            line-height: 1.4;
            border-left: 4px solid #2575fc;
        }
        .two-columns {
            display: flex;
            gap: 20px;
            margin: 20px 0;
        }
        .column {
            flex: 1;
        }
        .img-container {
            text-align: center;
            margin: 20px 0;
        }
        img {
            max-width: 100%;
            border-radius: 5px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .note {
            background-color: #fffde7;
            padding: 15px;
            border-radius: 5px;
            border-left: 4px solid #ffd600;
            margin: 15px 0;
        }
        .controls {
            position: fixed;
            bottom: 20px;
            right: 20px;
            display: flex;
            gap: 10px;
            z-index: 100;
        }
        button {
            padding: 10px 20px;
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }
        button:hover {
            opacity: 0.9;
        }
        .slide-counter {
            position: fixed;
            bottom: 20px;
            left: 20px;
            background-color: rgba(255, 255, 255, 0.8);
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.9rem;
            z-index: 100;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <div class="slides-container">
        <!-- Slide 1: Portada -->
        <div class="slide active">
            <div class="slide-content">
                <div class="slide-header">
                    <h1>Tipos de variables y estadística descriptiva I</h1>
                    <p>Curso: Estadística para el análisis de datos</p>
                </div>
                <div class="slide-body" style="text-align: center; display: flex; flex-direction: column; justify-content: center;">
                    <img src="R_logo.png" alt="R Studio Logo" style="margin: 0 auto; max-width: 300px; margin-bottom: 40px;">
                    <h2>Semana 3</h2>
                    <p style="font-size: 1.3rem; margin-top: 20px;">Universidad Latinoamericana de Ciencia y Tecnología</p>
                    <p style="font-size: 1.2rem;">Centro de Innovación y Transferencia Tecnológica (CIT)</p>
                </div>
            </div>
        </div>

        <!-- Slide 2: Contenidos -->
        <div class="slide">
            <div class="slide-content">
                <div class="slide-header">
                    <h1>Contenidos</h1>
                </div>
                <div class="slide-body">
                    <ul>
                        <li>Variables cualitativas y cuantitativas</li>
                        <li>Escalas de medición (nominal, ordinal, intervalo, razón)</li>
                        <li>Tablas de frecuencia y tablas de contingencia en R</li>
                        <li>Visualización de variables categóricas: gráficos de barras y circulares con ggplot2</li>
                        <li>Actividad práctica: Análisis descriptivo de variables categóricas en un conjunto de datos real</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Slide 3: Variables cualitativas y cuantitativas -->
        <div class="slide">
            <div class="slide-content">
                <div class="slide-header">
                    <h1>Variables cualitativas y cuantitativas</h1>
                </div>
                <div class="slide-body">
                    <div class="two-columns">
                        <div class="column">
                            <h3>Variables cualitativas</h3>
                            <p>Expresan características o cualidades que no pueden medirse con números.</p>
                            <ul>
                                <li><strong>Nominales</strong>: No tienen orden intrínseco (ej. género, color de ojos)</li>
                                <li><strong>Ordinales</strong>: Tienen un orden natural (ej. nivel educativo, satisfacción)</li>
                            </ul>
                            <p>En R, se representan como factores:</p>
                            <div class="code">
# Creando una variable cualitativa en R
genero <- factor(c("Masculino", "Femenino", 
                  "Femenino", "Masculino", 
                  "No binario"))

# Visualizar los niveles
levels(genero)

# Resumen de la variable
summary(genero)
                            </div>
                        </div>
                        <div class="column">
                            <h3>Variables cuantitativas</h3>
                            <p>Expresan cantidades numéricas medibles.</p>
                            <ul>
                                <li><strong>Discretas</strong>: Valores enteros, contables (ej. número de hijos)</li>
                                <li><strong>Continuas</strong>: Pueden tomar cualquier valor dentro de un intervalo (ej. peso, altura)</li>
                            </ul>
                            <p>En R, se representan como numeric, integer, etc.:</p>
                            <div class="code">
# Creando variables cuantitativas en R
edad <- c(25, 30, 22, 41, 38)
peso <- c(68.5, 72.3, 65.7, 80.1, 75.8)

# Verificar el tipo de datos
class(edad)
class(peso)

# Resumen estadístico
summary(edad)
summary(peso)
                            </div>
                        </div>
                    </div>
                    <div class="note">
                        <strong>Nota:</strong> Identificar correctamente el tipo de variable es fundamental para elegir los métodos estadísticos apropiados para su análisis en R.
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 4: Escalas de medición -->
        <div class="slide">
            <div class="slide-content">
                <div class="slide-header">
                    <h1>Escalas de medición</h1>
                </div>
                <div class="slide-body">
                    <p>Las escalas de medición definen el nivel de información y las operaciones matemáticas que pueden realizarse con los datos:</p>
                    
                    <table>
                        <tr>
                            <th>Escala</th>
                            <th>Características</th>
                            <th>Operaciones permitidas</th>
                            <th>Ejemplos</th>
                            <th>En R</th>
                        </tr>
                        <tr>
                            <td><strong>Nominal</strong></td>
                            <td>Categorías sin orden</td>
                            <td>Igualdad/desigualdad</td>
                            <td>Género, nacionalidad, color</td>
                            <td>factor (sin ordered)</td>
                        </tr>
                        <tr>
                            <td><strong>Ordinal</strong></td>
                            <td>Categorías con orden</td>
                            <td>Mayor/menor</td>
                            <td>Nivel educativo, escala Likert</td>
                            <td>ordered factor</td>
                        </tr>
                        <tr>
                            <td><strong>Intervalo</strong></td>
                            <td>Distancias iguales, cero arbitrario</td>
                            <td>Suma/resta</td>
                            <td>Temperatura en °C, fechas</td>
                            <td>numeric</td>
                        </tr>
                        <tr>
                            <td><strong>Razón</strong></td>
                            <td>Distancias iguales, cero absoluto</td>
                            <td>Todas (incl. multiplicación/división)</td>
                            <td>Edad, ingresos, altura</td>
                            <td>numeric</td>
                        </tr>
                    </table>

                    <div class="code">
# Ejemplos en R

# Nominal
colores <- factor(c("Rojo", "Azul", "Verde", "Azul", "Rojo"))

# Ordinal
nivel_educativo <- ordered(c("Primaria", "Secundaria", "Universidad", "Posgrado"),
                          levels = c("Primaria", "Secundaria", "Universidad", "Posgrado"))

# Intervalo/Razón
temperatura_c <- c(22.5, 25.0, 18.7, 30.2, 21.8)
edad_anos <- c(25, 30, 22, 41, 38)
                    </div>
                    
                    <div class="note">
                        <strong>Importancia en R:</strong> El tipo de escala determina qué funciones y tests estadísticos son apropiados para el análisis. Por ejemplo, no tendría sentido calcular la media de variables nominales.
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 5: Tablas de frecuencia -->
        <div class="slide">
            <div class="slide-content">
                <div class="slide-header">
                    <h1>Tablas de frecuencia en R</h1>
                </div>
                <div class="slide-body">
                    <p>Las tablas de frecuencia permiten resumir la distribución de una variable mostrando la ocurrencia de cada valor o categoría.</p>
                    
                    <h3>Tipos de tablas de frecuencia</h3>
                    <ul>
                        <li><strong>Frecuencia absoluta:</strong> Número de veces que aparece cada valor</li>
                        <li><strong>Frecuencia relativa:</strong> Proporción respecto al total (entre 0 y 1)</li>
                        <li><strong>Frecuencia porcentual:</strong> Frecuencia relativa expresada en porcentaje</li>
                        <li><strong>Frecuencia acumulada:</strong> Suma acumulativa de frecuencias</li>
                    </ul>

                    <div class="code">
# Creando un vector de datos
nivel_satisfaccion <- factor(c("Bajo", "Medio", "Alto", "Medio", "Alto", 
                               "Bajo", "Medio", "Alto", "Alto", "Medio"),
                            levels = c("Bajo", "Medio", "Alto"))

# Tabla de frecuencia absoluta
tabla_freq <- table(nivel_satisfaccion)
print(tabla_freq)

# Tabla de frecuencia relativa
prop.table(tabla_freq)

# Tabla de frecuencia porcentual
prop.table(tabla_freq) * 100

# Frecuencia acumulada
cumsum(tabla_freq)
                    </div>

                    <h3>Con el paquete tidyverse</h3>
                    <div class="code">
# Cargar tidyverse
library(tidyverse)

# Crear un data frame
df <- data.frame(
  satisfaccion = nivel_satisfaccion
)

# Tabla de frecuencia con dplyr
df %>%
  count(satisfaccion) %>%
  mutate(porcentaje = n / sum(n) * 100,
         acumulado = cumsum(n),
         porc_acumulado = cumsum(porcentaje))
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 6: Tablas de contingencia -->
        <div class="slide">
            <div class="slide-content">
                <div class="slide-header">
                    <h1>Tablas de contingencia en R</h1>
                </div>
                <div class="slide-body">
                    <p>Las tablas de contingencia (o tablas cruzadas) muestran la relación entre dos o más variables categóricas.</p>
                    
                    <h3>Creación de tablas de contingencia en R</h3>
                    
                    <div class="code">
# Crear datos de ejemplo
genero <- factor(c("Masculino", "Femenino", "Masculino", "Femenino", "Femenino",
                   "Masculino", "Masculino", "Femenino", "Femenino", "Masculino"))
                   
nivel_educativo <- factor(c("Secundaria", "Universidad", "Posgrado", "Universidad", 
                           "Posgrado", "Secundaria", "Universidad", "Secundaria",
                           "Universidad", "Posgrado"),
                         levels = c("Secundaria", "Universidad", "Posgrado"))

# Tabla de contingencia básica
tabla_cont <- table(genero, nivel_educativo)
print(tabla_cont)

# Añadir marginales
addmargins(tabla_cont)

# Proporciones por fila
prop.table(tabla_cont, 1)

# Proporciones por columna
prop.table(tabla_cont, 2)

# Proporciones totales
prop.table(tabla_cont)
                    </div>

                    <h3>Con tidyverse</h3>
                    <div class="code">
# Cargar tidyverse
library(tidyverse)

# Crear un data frame
df <- data.frame(
  genero = genero,
  educacion = nivel_educativo
)

# Tabla de contingencia con dplyr
df %>%
  count(genero, educacion) %>%
  pivot_wider(names_from = educacion, values_from = n, values_fill = 0)

# Test de independencia chi-cuadrado
chisq.test(tabla_cont)
                    </div>
                    
                    <div class="note">
                        <strong>Aplicaciones:</strong> Las tablas de contingencia son fundamentales para detectar asociaciones entre variables categóricas, punto de partida para análisis como Chi-cuadrado.
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 7: Visualización de variables categóricas - Gráficos de barras -->
        <div class="slide">
            <div class="slide-content">
                <div class="slide-header">
                    <h1>Visualización de variables categóricas: Gráficos de barras</h1>
                </div>
                <div class="slide-body">
                    <p>Los gráficos de barras son ideales para representar visualmente variables categóricas, mostrando la frecuencia o proporción de cada categoría.</p>
                    
                    <div class="two-columns">
                        <div class="column">
                            <h3>Con gráficos base de R</h3>
                            <div class="code">
# Datos de ejemplo
categorias <- factor(c("A", "B", "C", "A", "B", "A", "A", "C", "B", "A", 
                      "B", "C", "A", "A", "B"))

# Tabla de frecuencias
freq <- table(categorias)

# Gráfico de barras básico
barplot(freq, 
        main = "Frecuencia de categorías",
        xlab = "Categoría", 
        ylab = "Frecuencia",
        col = c("skyblue", "lightgreen", "salmon"))

# Gráfico de barras con porcentajes
barplot(prop.table(freq) * 100, 
        main = "Porcentaje de categorías",
        xlab = "Categoría", 
        ylab = "Porcentaje (%)",
        col = c("skyblue", "lightgreen", "salmon"))
                            </div>
                        </div>
                        <div class="column">
                            <h3>Con ggplot2</h3>
                            <div class="code">
# Cargar ggplot2
library(ggplot2)

# Crear dataframe
df <- data.frame(
  categoria = categorias
)

# Gráfico de barras básico
ggplot(df, aes(x = categoria, fill = categoria)) +
  geom_bar() +
  labs(title = "Frecuencia de categorías",
       x = "Categoría",
       y = "Frecuencia") +
  theme_minimal() +
  scale_fill_brewer(palette = "Pastel1")

# Gráfico de barras con porcentajes
ggplot(df, aes(x = categoria, fill = categoria)) +
  geom_bar(aes(y = after_stat(count)/sum(after_stat(count))*100)) +
  labs(title = "Porcentaje de categorías",
       x = "Categoría",
       y = "Porcentaje (%)") +
  theme_minimal() +
  scale_fill_brewer(palette = "Pastel1")
                            </div>
                        </div>
                    </div>
                    
                    <h3>Gráficos de barras agrupadas con ggplot2</h3>
                    <div class="code">
# Crear dataframe con dos variables categóricas
df2 <- data.frame(
  genero = rep(c("Masculino", "Femenino"), each = 15),
  satisfaccion = factor(c(sample(c("Bajo", "Medio", "Alto"), 15, replace = TRUE),
                         sample(c("Bajo", "Medio", "Alto"), 15, replace = TRUE)),
                      levels = c("Bajo", "Medio", "Alto"))
)

# Gráfico de barras agrupadas
ggplot(df2, aes(x = satisfaccion, fill = genero)) +
  geom_bar(position = "dodge") +
  labs(title = "Nivel de satisfacción por género",
       x = "Nivel de satisfacción",
       y = "Frecuencia") +
  theme_minimal() +
  scale_fill_brewer(palette = "Set1")
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 8: Visualización de variables categóricas - Gráficos circulares -->
        <div class="slide">
            <div class="slide-content">
                <div class="slide-header">
                    <h1>Visualización de variables categóricas: Gráficos circulares</h1>
                </div>
                <div class="slide-body">
                    <p>Los gráficos circulares (o de pastel) representan cada categoría como una porción de un círculo, mostrando su proporción respecto al total.</p>
                    
                    <div class="two-columns">
                        <div class="column">
                            <h3>Con gráficos base de R</h3>
                            <div class="code">
# Datos de ejemplo
navegadores <- c("Chrome", "Firefox", "Safari", "Edge", "Otros")
porcentajes <- c(65, 15, 10, 7, 3)

# Gráfico circular básico
pie(porcentajes, 
    labels = paste(navegadores, "(", porcentajes, "%)"),
    main = "Cuota de mercado de navegadores",
    col = rainbow(length(navegadores)))

# Gráfico circular 3D (requiere plotrix)
library(plotrix)
pie3D(porcentajes, 
      labels = paste(navegadores, "(", porcentajes, "%)"),
      main = "Cuota de mercado de navegadores (3D)",
      col = rainbow(length(navegadores)),
      explode = 0.1)
                            </div>
                        </div>
                        <div class="column">
                            <h3>Con ggplot2</h3>
                            <div class="code">
# Cargar ggplot2
library(ggplot2)

# Crear dataframe para gráfico circular
df_pie <- data.frame(
  navegador = navegadores,
  porcentaje = porcentajes
)

# Gráfico circular con ggplot2
ggplot(df_pie, aes(x = "", y = porcentaje, fill = navegador)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start = 0) +
  labs(title = "Cuota de mercado de navegadores",
       fill = "Navegador") +
  theme_minimal() +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        panel.grid = element_blank()) +
  geom_text(aes(label = paste0(porcentaje, "%")),
            position = position_stack(vjust = 0.5)) +
  scale_fill_brewer(palette = "Set2")
                            </div>
                        </div>
                    </div>
                    
                    <div class="note">
                        <strong>Consideración importante:</strong> Aunque los gráficos circulares son populares, muchos estadísticos recomiendan usar gráficos de barras en su lugar, ya que el ojo humano compara longitudes (barras) con mayor precisión que ángulos o áreas (circular). Los gráficos circulares son más efectivos cuando:
                        <ul>
                            <li>Hay pocas categorías (idealmente ≤ 5)</li>
                            <li>El objetivo principal es mostrar proporciones respecto al total</li>
                            <li>Las diferencias entre categorías son sustanciales</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 9: Actividad práctica -->
        <div class="slide">
            <div class="slide-content">
                <div class="slide-header">
                    <h1>Actividad práctica: Análisis descriptivo de variables categóricas</h1>
                </div>
                <div class="slide-body">
                    <h3>Objetivo</h3>
                    <p>Realizar un análisis descriptivo completo de variables categóricas utilizando un conjunto de datos real.</p>
                    
                    <h3>Dataset: mpg (datos de economía de combustible)</h3>
                    <div class="code">
# Cargar tidyverse (incluye ggplot2 y el dataset mpg)
library(tidyverse)

# Explorar el dataset
data(mpg)
glimpse(mpg)

# Ver las variables categóricas
summary(mpg %>% select(manufacturer, model, trans, drv, fl, class))
                    </div>
                    
                    <h3>Pasos a realizar</h3>
                    <ol>
                        <li>Identificar las variables categóricas en el dataset mpg</li>
                        <li>Crear tablas de frecuencia para las variables manufacturer y class</li>
                        <li>Crear una tabla de contingencia entre drv (tipo de tracción) y class (tipo de vehículo)</li>
                        <li>Visualizar la distribución de la variable class con un gráfico de barras</li>
                        <li>Visualizar la relación entre drv y class con un gráfico de barras agrupadas</li>
                        <li>Crear un gráfico circular para la variable fl (tipo de combustible)</li>
                        <li>Interpretar los resultados y escribir conclusiones breves</li>
                    </ol>
                    
                    <h3>Ejemplo de código para algunos pasos</h3>
                    <div class="code">
# Tabla de frecuencia para class
class_freq <- mpg %>%
  count(class, sort = TRUE) %>%
  mutate(porcentaje = n / sum(n) * 100)

print(class_freq)

# Tabla de contingencia entre drv y class
drv_class <- table(mpg$drv, mpg$class)
print(drv_class)

# Gráfico de barras para class
ggplot(mpg, aes(x = fct_infreq(class), fill = class)) +
  geom_bar() +
  labs(title = "Distribución de tipos de vehículos",
       x = "Tipo de vehículo",
       y = "Frecuencia") +
  theme_minimal() +
  theme(legend.position = "none")

# Gráfico de barras agrupadas para drv y class
ggplot(mpg, aes(x = class, fill = drv)) +
  geom_bar(position = "dodge") +
  labs(title = "Tipo de tracción por clase de vehículo",
       x = "Tipo de vehículo",
       y = "Frecuencia",
       fill = "Tracción") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 10: Conclusiones -->
        <div class="slide">
            <div class="slide-content">
                <div class="slide-header">
                    <h1>Conclusiones</h1>
                </div>
                <div class="slide-body">
                    <h3>Puntos clave aprendidos</h3>
                    <ul>
                        <li>Las variables cualitativas y cuantitativas tienen diferentes métodos de análisis y representación.</li>
                        <li>Las escalas de medición (nominal, ordinal, intervalo, razón) determinan qué operaciones estadísticas son válidas.</li>
                        <li>Las tablas de frecuencia y contingencia son herramientas fundamentales para resumir variables categóricas.</li>
                        <li>R proporciona múltiples enfoques para crear estas tablas (base R y tidyverse).</li>
                        <li>Los gráficos de barras y circulares permiten visualizar la distribución de variables categóricas.</li>
                        <li>ggplot2 ofrece una sintaxis consistente y flexible para crear visualizaciones personalizadas.</li>
                    </ul>
                    
                    <h3>Aplicaciones en análisis de datos</h3>
                    <ul>
                        <li>Análisis exploratorio de datos (EDA)</li>
                        <li>Identificación de patrones y tendencias en variables categóricas</li>
                        <li>Comunicación efectiva de resultados a través de visualizaciones</li>
                        <li>Base para análisis estadísticos más avanzados (pruebas de independencia, modelos predictivos)</li>
                    </ul>
                    
                    <h3>Próximos pasos</h3>
<ul>
    <li>Profundizar en técnicas de visualización avanzadas con ggplot2</li>
    <li>Estudiar métodos para analizar relaciones entre variables categóricas y numéricas</li>
    <li>Aprender a realizar pruebas estadísticas para variables categóricas (Chi-cuadrado, tests exactos)</li>
    <li>Explorar técnicas de reducción de dimensionalidad para datos categóricos</li>
</ul>

<div class="note">
    <strong>Recuerda:</strong> La correcta identificación del tipo de variable y escala de medición es el primer paso crucial para un análisis estadístico adecuado. R ofrece herramientas poderosas para manejar y visualizar datos categóricos, pero es responsabilidad del analista interpretarlos correctamente.
</div>
</div>
</div>
</div>

<!-- Controles de navegación -->
<div class="controls">
    <button id="prev">Anterior</button>
    <button id="next">Siguiente</button>
</div>
<div class="slide-counter">Diapositiva <span id="current">1</span> de <span id="total">10</span></div>

<script>
    const slides = document.querySelectorAll('.slide');
    const totalSlides = slides.length;
    let currentSlide = 0;
    
    document.getElementById('total').textContent = totalSlides;
    
    function showSlide(index) {
        if (index < 0) index = 0;
        if (index >= totalSlides) index = totalSlides - 1;
        
        slides.forEach(slide => slide.classList.remove('active'));
        slides[index].classList.add('active');
        currentSlide = index;
        document.getElementById('current').textContent = currentSlide + 1;
    }
    
    document.getElementById('next').addEventListener('click', () => {
        showSlide(currentSlide + 1);
    });
    
    document.getElementById('prev').addEventListener('click', () => {
        showSlide(currentSlide - 1);
    });
    
    // Navegación con teclado
    document.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowRight') showSlide(currentSlide + 1);
        if (e.key === 'ArrowLeft') showSlide(currentSlide - 1);
    });
</script>
</body>
</html>
